{"version":3,"file":"auth.controller.js","sourceRoot":"","sources":["../../src/controllers/auth.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from 'express';\r\nimport { authService } from '../services/auth.service.js';\r\nimport { apiResponse } from '../utils/api.utils.js';\r\n\r\n/**\r\n * AuthController - Controller for authentication endpoints\r\n */\r\nexport class AuthController {\r\n  /**\r\n   * Register a new user\r\n   */\r\n  async register(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const result = await authService.register(req.body);\r\n      apiResponse.success(res, result, 201);\r\n    } catch (error: any) {\r\n      apiResponse.error(\r\n        res,\r\n        error.message || 'Registration failed',\r\n        400,\r\n        'REGISTRATION_ERROR'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Login a user\r\n   */\r\n  async login(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const result = await authService.login(req.body);\r\n      apiResponse.success(res, result);\r\n    } catch (error: any) {\r\n      apiResponse.error(\r\n        res,\r\n        error.message || 'Authentication failed',\r\n        401,\r\n        'AUTH_ERROR'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logout a user\r\n   */\r\n  async logout(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const token = req.headers.authorization?.split(' ')[1] || '';\r\n      await authService.logout(token);\r\n      apiResponse.success(res, { message: 'Logged out successfully' });\r\n    } catch (error: any) {\r\n      apiResponse.error(\r\n        res,\r\n        error.message || 'Logout failed',\r\n        500,\r\n        'LOGOUT_ERROR'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current user profile\r\n   */\r\n  async getProfile(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      if (!req.user) {\r\n        apiResponse.error(res, 'User not authenticated', 401, 'UNAUTHORIZED');\r\n        return;\r\n      }\r\n\r\n      const profile = await authService.getProfile(req.user.id);\r\n      apiResponse.success(res, profile);\r\n    } catch (error: any) {\r\n      apiResponse.error(\r\n        res,\r\n        error.message || 'Failed to retrieve profile',\r\n        500,\r\n        'PROFILE_ERROR'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update current user profile\r\n   */\r\n  async updateProfile(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      if (!req.user) {\r\n        apiResponse.error(res, 'User not authenticated', 401, 'UNAUTHORIZED');\r\n        return;\r\n      }\r\n\r\n      const updatedProfile = await authService.updateProfile(req.user.id, req.body);\r\n      apiResponse.success(res, updatedProfile);\r\n    } catch (error: any) {\r\n      apiResponse.error(\r\n        res,\r\n        error.message || 'Failed to update profile',\r\n        400,\r\n        'PROFILE_UPDATE_ERROR'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// Export a singleton instance\r\nexport const authController = new AuthController();\r\nexport default authController; "]}